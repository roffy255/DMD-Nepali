/*
 * NepFont1_16bit
 *
 * File Name           : NepFont1_16bit.h
 * Date                : 11.03.2017
 * Font width          : 10
 * Font height         : 16
 * Font first char     : 32
 * Font last char      : 128
 * Font used chars     : 96
 *
 * The font data are defined as
 *
 * struct _FONT_ {
 *     uint16_t   font_Size_in_Bytes_over_all_included_Size_it_self;
 *     uint8_t    font_Width_in_Pixel_for_fixed_drawing;
 *     uint8_t    font_Height_in_Pixel_for_all_characters;
 *     unit8_t    font_First_Char;
 *     uint8_t    font_Char_Count;
 *
 *     uint8_t    font_Char_Widths[font_Last_Char - font_First_Char +1];
 *                  // for each character the separate width in pixels,
 *                  // characters < 128 have an implicit virtual right empty row
 *
 *     uint8_t    font_data[];
 *                  // bit field of all characters
 */

#include <inttypes.h>
#ifdef __AVR__
#include <avr/pgmspace.h>
#elif defined(ESP8266)
#include <pgmspace.h>
#else
#define PROGMEM
#endif

#ifndef NEPFONT_BOLD_H
#define NEPFONT_BOLD_H

#define NEPFONT_BOLD_WIDTH 10
#define NEPFONT_BOLD_HEIGHT 14

static const uint8_t NepFont_Bold[] PROGMEM = {
    0x1E, 0x6C, // size
    0x0A,       // width
    0x10,       // height
    0x21,       // first char
    0x5C,       // char count

    // char widths
    0x0e, 0x05, 0x05, 0x10,
    0x10, 0x11, 0x0b, 0X0b, 0X10, 0x16, 0x0f, 0x00, 0x00, 0x00,
    0x0c, 0x0c, 0x0d, 0x00, 0x00, 0x00, 0x13, 0x10, 0x10, 0x10,
    0x11, 0x12, 0x10, 0x11, 0x14, 0x10, 0x0e, 0x0f, 0x11, 0x0e,
    0x12, 0x0f, 0x0f, 0x0e, 0x0e, 0x0f, 0x10, 0x0d, 0x14, 0x0f,
    0x10, 0x10, 0x0f, 0x0b, 0x0f, 0x10, 0x0c, 0x0d, 0x0f, 0x11,
    0x0f, 0x10, 0x0c, 0x10, 0x0e, 0x06, 0x0A, 0x08, 0x10, 0x10,
    0x0b, 0x0c, 0x08, 0x09, 0x01, 0x0f, 0x0f, 0x0a, 0x09, 0x00,
    0x0f, 0x0a, 0x0c, 0x0f, 0x00, 0x14, 0x04, 0x10, 0x0f, 0x08,
    0x09, 0x09, 0x10, 0x0b, 0x0b, 0x11, 0x10, 0x0b,

    // font data
    0x00, 0x00, 0x00, 0x00, 0x80, 0xc0, 0xc0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x07, 0x0e, 0x18, 0x30, 0x60, 0x61, 0x61, 0x60, 0x60, 0x70, 0x33, 0x1f, 0x0e, 0x00, // Chandrabindhu            901
    0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x60, 0x60, 0x00, // Sirbindhu                902
    0x00, 0x06, 0x0f, 0x06, 0x00,
    0x00, 0x30, 0x78, 0x30, 0x00, // substitute for space     903
    0x03, 0xf3, 0xfb, 0x3b, 0x3b, 0x33, 0x03, 0x03, 0xf3, 0xfb, 0x3f, 0xff, 0xe3, 0x03, 0x03, 0x03,
    0x00, 0x00, 0x1f, 0x3f, 0x77, 0x63, 0x63, 0x70, 0x39, 0x3b, 0x1e, 0x0f, 0xcf, 0xfc, 0x70, 0x00, // chha 91B//*** 904
    0x80, 0x80, 0x03, 0x63, 0x63, 0x71, 0x7f, 0xde, 0xc0, 0xc3, 0xc3, 0xff, 0xff, 0x03, 0x03, 0x03,
    0x01, 0x03, 0x0f, 0x0c, 0x18, 0x18, 0x1c, 0x0f, 0x07, 0x01, 0x01, 0x7f, 0xff, 0x00, 0x00, 0x00, // a    905
    0x06, 0x07, 0x03, 0x63, 0x73, 0x7f, 0xcf, 0xc0, 0x83, 0xc3, 0xff, 0xff, 0x03, 0x03, 0xff, 0xff, 0x03,
    0x07, 0x0e, 0x1c, 0x18, 0x18, 0x18, 0x1f, 0x0f, 0x07, 0x01, 0x7f, 0xff, 0x00, 0x00, 0x7f, 0xff, 0x00, // aa   906
    0x03, 0xf3, 0xfb, 0x9b, 0x9b, 0x9b, 0x9f, 0x9f, 0x83, 0x03, 0x03,
    0x00, 0x00, 0x38, 0x3d, 0x3d, 0x3d, 0x39, 0xf9, 0xcf, 0x8f, 0x00, // i    907
    0x03, 0xf3, 0xfb, 0x9b, 0x9b, 0x9b, 0x9f, 0x9f, 0x83, 0x03, 0x03,
    0x00, 0x00, 0x38, 0x3d, 0x3d, 0x3d, 0x39, 0xf9, 0xcf, 0x8f, 0x00, // ii   908

    0x03, 0x83, 0x83, 0x03, 0x03, 0x03, 0x03, 0xc3, 0xc3, 0xc3, 0xc7, 0xe7, 0x7f, 0x3b, 0x03, 0x03,
    0x00, 0x01, 0x07, 0x1f, 0x3c, 0x70, 0x60, 0x61, 0xc1, 0xc1, 0xe1, 0xf3, 0x7e, 0x1e, 0x00, 0x00, // u    909

    0x03, 0x83, 0x83, 0x03, 0x03, 0x03, 0x03, 0xc3, 0xc3, 0xc3, 0xc7, 0xe7, 0x7f, 0x3b, 0xc3, 0xc3, 0xc3, 0xc3, 0x83, 0x03, 0x03, 0x03,
    0x00, 0x01, 0x07, 0x1f, 0x3c, 0x70, 0x60, 0x61, 0xc1, 0xc1, 0xe1, 0xf3, 0x7e, 0x1e, 0x00, 0x00, 0x41, 0x61, 0x7f, 0x3f, 0x00, 0x00, // uu   90A
    0x03, 0x73, 0x7b, 0x1b, 0x1b, 0xb3, 0xff, 0xff, 0x83, 0x83, 0x83, 0xff, 0xff, 0x03, 0x03,
    0x00, 0x0c, 0x0e, 0x06, 0x03, 0x03, 0x3f, 0x7f, 0x00, 0x78, 0xfc, 0xcf, 0xc7, 0xc0, 0x00, // Rri  90B

    // ***  90C
    // ***  90D
    // ***  90E
    0x03, 0xff, 0xff, 0xff, 0x03, 0x03, 0xff, 0xff, 0x03, 0x03, 0x03, 0x03,
    0x00, 0x01, 0x03, 0x07, 0x06, 0x0c, 0x19, 0x30, 0x60, 0x00, 0x00, 0x00, // e    90F
    0x03, 0xff, 0xff, 0xff, 0x03, 0x03, 0xff, 0xff, 0x03, 0x03, 0x03, 0x03,
    0x00, 0x01, 0x03, 0x07, 0x06, 0x0c, 0x19, 0x30, 0x60, 0x00, 0x00, 0x00, // ai   910

    0x03, 0xc3, 0xe3, 0xe3, 0xe3, 0xff, 0xff, 0x7f, 0x33, 0x73, 0xe3, 0xc3, 0x03,
    0x00, 0x00, 0x03, 0x07, 0x0f, 0x1d, 0x38, 0x70, 0xc0, 0x06, 0x07, 0x03, 0x00, //***  911  ruuuuuu   '1'
    // ***  912
    // 0x20, 0x10, 0x90, 0x90, 0x62, 0x12, 0xF2, 0x14, 0x18, 0xF0, 0x10,
    // 0x04, 0x08, 0x08, 0x08, 0x07, 0x01, 0x0F, 0x00, 0x00, 0x0F, 0x00, // o    913
    // 0x20, 0x10, 0x90, 0x92, 0x62, 0x12, 0xF4, 0x19, 0x1E, 0xF0, 0x10,
    // 0x04, 0x08, 0x08, 0x08, 0x07, 0x01, 0x0F, 0x00, 0x00, 0x0F, 0x00, // au   914

    0x03, 0xc3, 0xe3, 0xf3, 0x73, 0x33, 0x63, 0x03, 0xff, 0xff, 0xff, 0xe3, 0x63, 0x63, 0x63, 0xc3, 0x83, 0x03, 0x03,
    0x00, 0x03, 0x07, 0x0c, 0x18, 0x18, 0x0c, 0x06, 0x3f, 0x7f, 0xff, 0x00, 0x08, 0x0c, 0x0e, 0x07, 0x03, 0x00, 0x00, // ka   915
    0x03, 0xc3, 0xe7, 0xe7, 0xff, 0x03, 0xe3, 0xf3, 0x33, 0x33, 0x33, 0xf3, 0xff, 0xff, 0x03, 0x03,
    0x00, 0x01, 0x03, 0x0f, 0x1d, 0x18, 0x31, 0x37, 0x36, 0x36, 0x37, 0x3f, 0x7f, 0xff, 0x00, 0x00, // kha  916
    0x03, 0x43, 0xc3, 0xc3, 0xc3, 0xff, 0xff, 0x03, 0x03, 0x03, 0x03, 0xff, 0xff, 0xff, 0x03, 0x03,
    0x00, 0x00, 0x00, 0x01, 0x03, 0x07, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x7f, 0xff, 0x00, 0x00, // ga   917
    0x03, 0x0f, 0x9f, 0x97, 0xe3, 0x63, 0x63, 0x63, 0x03, 0x03, 0x03, 0xff, 0xff, 0xff, 0x03, 0x03,
    0x00, 0x00, 0x07, 0x07, 0x08, 0x18, 0x18, 0x18, 0x0c, 0x0e, 0x06, 0x3f, 0x7f, 0xff, 0x00, 0x00, // gha  918
    0x03, 0x03, 0x03, 0x03, 0xe3, 0x33, 0x33, 0x33, 0x33, 0x33, 0x3f, 0x3f, 0x03, 0x83, 0x83, 0x03, 0x03,
    0x00, 0x06, 0x0e, 0x18, 0x31, 0x63, 0x46, 0xc6, 0xc6, 0xc6, 0xe6, 0x7c, 0x38, 0x01, 0x01, 0x00, 0x00, // nga  919
    0x03, 0x13, 0x33, 0x33, 0x33, 0xf3, 0xf3, 0x73, 0x33, 0x33, 0x33, 0x83, 0xff, 0xff, 0xff, 0x03, 0x03, 0x03,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x06, 0x0c, 0x0c, 0x0e, 0x07, 0x03, 0x3f, 0x7f, 0xff, 0x00, 0x00, 0x00, // ch   91A
    0x03, 0xf3, 0xfb, 0x3b, 0x3b, 0x33, 0x03, 0x03, 0xf3, 0xfb, 0x3f, 0xff, 0xe3, 0x03, 0x03, 0x03,
    0x00, 0x00, 0x1f, 0x3f, 0x77, 0x63, 0x63, 0x70, 0x39, 0x3b, 0x1e, 0x0f, 0xcf, 0xfc, 0x70, 0x00, // chha 91B
    0x03, 0x63, 0xe3, 0x83, 0x03, 0x03, 0x63, 0xe3, 0xe3, 0x63, 0x63, 0xff, 0xff, 0xff, 0x03, 0x03, 0x03,
    0x00, 0x00, 0x01, 0x07, 0x0e, 0x1c, 0x1c, 0x1f, 0x0f, 0x00, 0x00, 0x3f, 0x7f, 0xff, 0x00, 0x00, 0x00, // ja   91C
    0x03, 0x03, 0xe3, 0xf3, 0xf3, 0x93, 0x93, 0x1f, 0x1f, 0x1f, 0x03, 0x03, 0x03, 0x03, 0xff, 0xff, 0xff, 0x03, 0x03, 0x03,
    0x00, 0x08, 0x18, 0x38, 0x78, 0xf0, 0xf1, 0xd1, 0xdb, 0xdf, 0x8f, 0x83, 0x03, 0x03, 0x3f, 0x7f, 0xff, 0x00, 0x00, 0x00, // jha  91D
    0x03, 0x03, 0x73, 0x3b, 0x1b, 0x1b, 0x7b, 0xf3, 0xc3, 0xc3, 0xff, 0xff, 0xff, 0x03, 0x03, 0x03,
    0x00, 0x00, 0x07, 0x0e, 0x0c, 0x0c, 0x0e, 0x07, 0x01, 0x01, 0x3f, 0x7f, 0xff, 0x00, 0x00, 0x00, // yna  91E

    0x03, 0x03, 0x83, 0xc3, 0xe3, 0xe3, 0xe3, 0xff, 0xff, 0x03, 0x03, 0x03, 0x03, 0x03,
    0x00, 0x0f, 0x3f, 0x73, 0x61, 0xc0, 0xc0, 0xe0, 0xe0, 0x70, 0x70, 0x00, 0x00, 0x00, // tta   91F
    0x03, 0x03, 0x03, 0x83, 0xc3, 0xc3, 0xff, 0xff, 0xc3, 0xc3, 0x83, 0x03, 0x03, 0x03, 0x03,
    0x00, 0x00, 0x1f, 0x3f, 0x63, 0xe1, 0xe0, 0xe0, 0xe0, 0x71, 0x3f, 0x1f, 0x00, 0x00, 0x00, // ttha  920
    0x03, 0x03, 0x03, 0x03, 0xe3, 0x73, 0x33, 0x33, 0x33, 0x33, 0x3f, 0x3f, 0x03, 0x03, 0x03, 0x03, 0x03,
    0x00, 0x06, 0x0e, 0x18, 0x31, 0x63, 0x46, 0xc6, 0xc6, 0xc6, 0xe6, 0x7c, 0x38, 0x00, 0x00, 0x00, 0x00, // dda   921
    0x03, 0xc3, 0xe3, 0xf3, 0x73, 0x73, 0x73, 0x7f, 0x7f, 0x3f, 0x03, 0x03, 0x03, 0x03,
    0x00, 0x0f, 0x1f, 0x38, 0x70, 0x7e, 0xff, 0xe3, 0xe3, 0xf3, 0x7e, 0x3c, 0x00, 0x00, // ddha  922
    0x03, 0x03, 0xff, 0xff, 0xff, 0x03, 0x03, 0xff, 0xff, 0xff, 0x03, 0x03, 0xff, 0xff, 0xff, 0x03, 0x03, 0x03,
    0x00, 0x00, 0x00, 0x01, 0x03, 0x07, 0x07, 0x07, 0x03, 0x01, 0x00, 0x00, 0x3f, 0x7f, 0xff, 0x00, 0x00, 0x00, // nna   923

    0x03, 0xc3, 0xe3, 0xf3, 0x73, 0x73, 0x73, 0x73, 0x73, 0xff, 0xff, 0xff, 0x03, 0x03, 0x03,
    0x00, 0x07, 0x0f, 0x1c, 0x38, 0x60, 0xc0, 0x00, 0x00, 0x3f, 0x7f, 0xff, 0x00, 0x00, 0x00, // Ta   925
    0x00, 0xce, 0xdf, 0xd7, 0xe7, 0xfe, 0x7c, 0x01, 0x03, 0xff, 0xff, 0xff, 0x03, 0x03, 0x03,
    0x00, 0x00, 0x03, 0x07, 0x07, 0x0e, 0x0c, 0x0e, 0x07, 0x3f, 0x7f, 0xff, 0x00, 0x00, 0x00, // Tha  926
    0x03, 0x03, 0xe3, 0xf3, 0x33, 0x33, 0x33, 0x3f, 0x3f, 0x3f, 0x03, 0x03, 0x03, 0x03,
    0x00, 0x00, 0x07, 0x0f, 0x1c, 0x18, 0x1e, 0x1f, 0x7f, 0xfe, 0xc0, 0x00, 0x00, 0x00, // Da   927
    0x00, 0x1e, 0xbf, 0xf9, 0xef, 0xe6, 0x61, 0x43, 0x03, 0xff, 0xff, 0xff, 0x03, 0x03,
    0x00, 0x0f, 0x1f, 0x39, 0x30, 0x38, 0x38, 0x1c, 0x1f, 0x3f, 0x7f, 0xff, 0x00, 0x00, // Dha  928
    0x03, 0xc3, 0xe3, 0xe3, 0xe3, 0x63, 0x63, 0x63, 0x63, 0xff, 0xff, 0xff, 0x03, 0x03, 0x03,
    0x00, 0x01, 0x03, 0x07, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x7f, 0xff, 0x00, 0x00, 0x00, // Na   929

    0x00, 0x1f, 0x9b, 0xb3, 0xbe, 0xfc, 0xf9, 0x83, 0x83, 0x83, 0xff, 0xff, 0xff, 0x03, 0x03, 0x03,
    0x00, 0x00, 0x03, 0x07, 0x0f, 0x0f, 0xcf, 0xe3, 0x73, 0x3b, 0x1f, 0x7f, 0xff, 0x00, 0x00, 0x00, // Substitute for bhra  924

    0x03, 0xff, 0xff, 0xff, 0x03, 0x03, 0x03, 0xff, 0xff, 0xff, 0x03, 0x03, 0x03,
    0x00, 0x00, 0x01, 0x03, 0x07, 0x06, 0x07, 0x3f, 0x7f, 0xff, 0x00, 0x00, 0x00, // pa   92A
    0x03, 0xff, 0xff, 0xff, 0x03, 0x03, 0x03, 0x83, 0xff, 0xff, 0xff, 0xe3, 0x63, 0x63, 0xe3, 0xc3, 0x83, 0x03, 0x03, 0x03,
    0x00, 0x00, 0x01, 0x03, 0x07, 0x06, 0x07, 0x07, 0x3f, 0x7f, 0xff, 0x00, 0x00, 0x00, 0x38, 0x3f, 0x1f, 0x00, 0x00, 0x00, // pha  92B
    0x03, 0xc3, 0xf3, 0x73, 0x7b, 0xfb, 0x9b, 0x3b, 0x33, 0xff, 0xff, 0xff, 0x03, 0x03, 0x03,
    0x00, 0x01, 0x07, 0x0e, 0x0c, 0x0c, 0x0f, 0x0e, 0x07, 0x3f, 0x7f, 0xff, 0x00, 0x00, 0x00, // ba   92C
    0x0e, 0x1f, 0xb3, 0xb3, 0xfe, 0xf4, 0x81, 0x83, 0x83, 0x83, 0xff, 0xff, 0xff, 0x03, 0x03, 0x03,
    0x00, 0x03, 0x07, 0x0f, 0x1f, 0x1f, 0x03, 0x03, 0x03, 0x03, 0x3f, 0x7f, 0xff, 0x00, 0x00, 0x00, // bha  92D
    0x03, 0x83, 0x83, 0xff, 0xff, 0xff, 0x83, 0x83, 0x83, 0x83, 0xff, 0xff, 0xff, 0x03, 0x03, 0x03,
    0x00, 0x01, 0x03, 0x07, 0x0f, 0x1f, 0x01, 0x01, 0x01, 0x01, 0x3f, 0x7f, 0xff, 0x00, 0x00, 0x00, // ma   92E
    0x03, 0xc3, 0xc7, 0xe7, 0xff, 0x7f, 0x3b, 0x03, 0x03, 0xff, 0xff, 0xff, 0x03, 0x03, 0x03,
    0x00, 0x01, 0x03, 0x06, 0x0c, 0x0c, 0x0c, 0x0e, 0x07, 0x3f, 0x7f, 0xff, 0x00, 0x00, 0x00, // ya   92F
    0x03, 0xc3, 0xe3, 0xe3, 0xe3, 0xff, 0xff, 0x3f, 0x03, 0x03, 0x03,
    0x00, 0x00, 0x03, 0x07, 0x0f, 0x19, 0x30, 0x60, 0xc0, 0x00, 0x00, // ra   930

    0x03, 0xc3, 0xe3, 0x73, 0x73, 0xf3, 0xb3, 0x33, 0x23, 0xff, 0xff, 0xff, 0x03, 0x03, 0x03,
    0x00, 0x03, 0x07, 0x0e, 0x8c, 0xcc, 0x67, 0x37, 0x1f, 0x3f, 0x7f, 0xff, 0x00, 0x00, 0x00, // Substitute Braa  931

    0x03, 0xe3, 0xf3, 0xf3, 0x73, 0x73, 0xe3, 0xc3, 0xe3, 0xe3, 0xff, 0xff, 0xff, 0x03, 0x03, 0x03,
    0x00, 0x03, 0x07, 0x0f, 0x1c, 0x38, 0x31, 0x03, 0x01, 0x00, 0x3f, 0x7f, 0xff, 0x00, 0x00, 0x00, // la   932

    0x03, 0xc3, 0xe3, 0xe3, 0x63, 0x63, 0xc3, 0xff, 0xff, 0xc3, 0xc3, 0xc3,
    0x00, 0xc3, 0xe7, 0x76, 0x3e, 0x1f, 0x0f, 0x7f, 0xff, 0x01, 0x00, 0x00, // Substitute Kra  933

    0x03, 0xff, 0xff, 0xff, 0x03, 0x03, 0x03, 0xff, 0xff, 0xff, 0x03, 0x03, 0x03,
    0x00, 0x00, 0x01, 0xc3, 0xe3, 0x73, 0x3b, 0x1f, 0x7f, 0xff, 0x00, 0x00, 0x00, // Substitute Pra  934

    0x03, 0xc3, 0xf3, 0x73, 0x7b, 0x3b, 0x1b, 0x3b, 0x33, 0xff, 0xff, 0xff, 0x03, 0x03, 0x03,
    0x00, 0x01, 0x07, 0x0e, 0x0c, 0x0c, 0x0e, 0x0e, 0x07, 0x3f, 0x7f, 0xff, 0x00, 0x00, 0x00, // va   935
    0x03, 0x01, 0x3e, 0x7f, 0x63, 0x63, 0xfe, 0xfc, 0x03, 0x03, 0x03, 0xff, 0xff, 0xff, 0x03, 0x03, 0x03,
    0x00, 0x03, 0x07, 0x07, 0x06, 0x1f, 0x7b, 0xf1, 0xc0, 0x00, 0x00, 0x3f, 0x7f, 0xff, 0x00, 0x00, 0x00, // sha  936
    0x03, 0xff, 0xff, 0xff, 0x1f, 0x3b, 0x73, 0xe3, 0xc3, 0xff, 0xff, 0xff, 0x03, 0x03, 0x03,
    0x00, 0x01, 0x03, 0x07, 0x06, 0x06, 0x06, 0x06, 0x03, 0x3f, 0x7f, 0xff, 0x00, 0x00, 0x00, // ssa  937
    0x03, 0xc3, 0xe3, 0xe3, 0xe3, 0xff, 0xff, 0xbb, 0x83, 0x83, 0xff, 0xff, 0xff, 0x03, 0x03, 0x03,
    0x00, 0x00, 0x03, 0x07, 0x0d, 0x18, 0x30, 0x61, 0xc1, 0x01, 0x3f, 0x7f, 0xff, 0x00, 0x00, 0x00, // sa   938
    0x03, 0xf3, 0xfb, 0xbb, 0x9b, 0x9b, 0x9f, 0x9f, 0x9f, 0x03, 0x03, 0x03,
    0x00, 0x1e, 0x3f, 0x7f, 0xe3, 0xc1, 0xc1, 0x9d, 0x1f, 0x0f, 0x00, 0x00, // ha   939

    0x8e, 0xdf, 0xf3, 0x61, 0x73, 0xfe, 0xdc, 0xc1, 0xc3, 0xc3, 0xff, 0xff, 0xff, 0x03, 0x03, 0x03,
    0x07, 0x0f, 0x18, 0x38, 0x3c, 0xfe, 0xfe, 0x1c, 0x00, 0x00, 0x3f, 0x7f, 0xff, 0x00, 0x00, 0x00, // Substitute kshya   93A
    0x03, 0x03, 0x73, 0x3b, 0x3b, 0x1b, 0x3b, 0xb3, 0xff, 0xff, 0xff, 0x03, 0x03, 0x03,
    0x00, 0x00, 0x00, 0x0c, 0x0e, 0x06, 0x07, 0x03, 0x3f, 0x7f, 0xff, 0x00, 0x00, 0x00, // Substitute tra   93B

    0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x3c, 0x7e, 0xc6, 0x86, 0x06, 0x04, // Substitute Half Ra 93C
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xC0, 0x20, 0x10, 0x10, 0x10, 0x10, 0x10, 0x20, 0x40, 0x80, // Substitute I-kaar 93D

    0x03, 0x03, 0xff, 0xff, 0xff, 0x03, 0x03, 0x03,
    0x00, 0x00, 0x3f, 0x7f, 0xff, 0x00, 0x00, 0x00, // Aa-kaar  93E
    0x00, 0x00, 0x80, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x7e, 0xff, 0xff, 0x87, 0x03, 0x01, 0x01, 0x01, 0x03, 0x07, 0x0e, 0x1c, 0x70, 0xc0, 0x00, 0x00, // I-kaar   93F
    0x00, 0x00, 0x80, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x7e, 0xff, 0xff, 0x87, 0x03, 0x01, 0x01, 0x01, 0x03, 0x07, 0x0e, 0x1c, 0x70, 0xc0, 0x00, 0x00, // Ii-kaar  940
    0x0c, 0x1c, 0x18, 0x30, 0x30, 0x33, 0x33, 0x33, 0x33, 0x1e, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // U-kaar   941
    0x1e, 0x3f, 0x33, 0x3b, 0x3b, 0x3b, 0x03, 0x07, 0x0e, 0x1c, 0x38, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,// Uu-kaar  942
    0x00, 0x3e, 0x7f, 0x77, 0x63, 0x63, 0x70, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // Rri-kaar 943

    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x3e, 0x7f, 0xe7, 0xc3, 0x03, 0x03, 0x02, 0x00, // Substitute for Vocalic-R 944
    0x12,
    0x00, // Vocalic-R extension 945

    0x03, 0xc3, 0xc3, 0xc3, 0xff, 0xff, 0x03, 0x03, 0x03, 0xff, 0xff, 0xff, 0x03, 0x03, 0x03,
    0x00, 0x01, 0x03, 0x07, 0x0f, 0xcf, 0xe0, 0x70, 0x38, 0x1f, 0x7f, 0xff, 0x00, 0x00, 0x00, // Substitute for Gra  946

    0x00, 0xc0, 0xc0, 0xc0, 0xc0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x03, 0x03, 0x03, 0x03, 0x03, 0x07, 0x06, 0x0c, 0x18, 0x30, 0x60, 0x80, 0x00, // E-kaar   947
    0x00, 0x00, 0x30, 0x70, 0x70, 0xe0, 0xc0, 0x80, 0x00, 0x00,
    0x02, 0x0e, 0x0e, 0x0c, 0x1c, 0x18, 0x31, 0x67, 0xfe, 0x00, // Ai-kaar  948

    0x50, 0xD0, 0xD0, 0xD0, 0xF0, 0x10, 0x10, 0x10, 0x10,
    0x07, 0x09, 0x00, 0x00, 0x0F, 0x01, 0x09, 0x06, 0x00, // Substitute for kTa      949

    // ***      94A
    0x00, 0xc0, 0xc0, 0xc0, 0xc0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x03, 0x03, 0x03, 0x03, 0x03, 0x07, 0x06, 0x0c, 0x18, 0x30, 0x60, 0x80, 0x00, // O-kaar   94B
    0x00, 0x00, 0x30, 0x70, 0x70, 0xe0, 0xc0, 0x80, 0x00, 0x00,
    0x02, 0x0e, 0x0e, 0x0c, 0x1c, 0x18, 0x31, 0x67, 0xfe, 0x00, // Au-kaar  94C
    0x00, 0x00, 0x01, 0x03, 0x03, 0x03, 0x03, 0x06, 0x0c, 0x18, 0x30, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // Virama   94D

    0x03, 0x03, 0x03, 0x03, 0xe3, 0xf3, 0xf3, 0x33, 0x33, 0xbf, 0xbf, 0x3f, 0x03, 0x03, 0x03,
    0x00, 0x0e, 0x1f, 0x33, 0x31, 0x77, 0xff, 0xcc, 0xcf, 0x6f, 0x7f, 0x37, 0x60, 0xc0, 0x00, //  substitute for dhha  94E
    // *** - 94F
    0x00, 0x00, 0x00, 0x40, 0x20, 0x20, 0x20, 0x64, 0xec, 0xd8, 0x13, 0x13, 0x98, 0x8c, 0x84, 0x80, 0x80, 0x00, 0x00, 0x00,
    0x00, 0x04, 0x3c, 0x60, 0xc0, 0xc2, 0xc2, 0xe7, 0x7f, 0x3d, 0x02, 0x03, 0x21, 0x20, 0x20, 0x31, 0x3f, 0x1f, 0x00, 0x00, // Om-kaar  950

    // ***      951 - 963`(not incl)uded)

    0x00, 0xfe, 0xfc, 0x00,
    0x00, 0x3f, 0x7f, 0x00, // Purnabiram   964            ********

    0x03, 0x13, 0x33, 0x73, 0xf3, 0xf3, 0xf3, 0xb3, 0x33, 0x33, 0xff, 0xff, 0xff, 0x03, 0x03, 0x03,
    0x00, 0x0c, 0x1e, 0x3e, 0x3e, 0x7c, 0xdf, 0x8f, 0x07, 0x00, 0x3f, 0x7f, 0xff, 0x00, 0x00, 0x00, // Substitute gya  965

    //NUMBERS************************************************************************
    0x00, 0xe0, 0xf8, 0x7c, 0x1c, 0x0e, 0x06, 0x06, 0x06, 0x06, 0x0c, 0x1c, 0xf8, 0xe0, 0x00,
    0x00, 0x07, 0x1f, 0x30, 0x60, 0x60, 0x60, 0x60, 0x60, 0x70, 0x78, 0x3e, 0x1f, 0x0f, 0x00, // 0    966
    0x1e, 0x7f, 0x67, 0xc3, 0xc3, 0xff, 0xfe, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x80, // 1    967
    0x06, 0xc7, 0xc7, 0xc3, 0x83, 0x83, 0xe7, 0xfe, 0x3c,
    0x00, 0x00, 0x01, 0x03, 0x03, 0x0f, 0x3d, 0xf0, 0xc0, // 2    968
    0x01, 0x33, 0x33, 0x33, 0x33, 0x7f, 0xde, 0x80, 0x00,
    0x00, 0x06, 0x0f, 0x0f, 0x0e, 0x3e, 0xf7, 0xc3, 0x00, // 3    969
    0x00, 0x06, 0x0e, 0x18, 0x30, 0x60, 0xc0, 0xc0, 0xe0, 0xf0, 0x78, 0x3c, 0x0e, 0x0e, 0x06, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x3e, 0x3f, 0xff, 0xe7, 0xe3, 0xfe, 0x7c, 0x3c, 0x00, 0x00, 0x00, 0x00, // 4    96A
    0x00, 0x1f, 0x3f, 0x40, 0x40, 0xe0, 0xfe, 0x1e, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x1c, 0x1e, 0x0e, 0x0f, 0x19, 0x30, 0x60, 0xc0, 0x00, // 5    96B
    0x00, 0x1e, 0xb3, 0xf3, 0x33, 0x33, 0x23, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x03, 0x07, 0x06, 0x0c, 0x1f, 0x77, 0xc7, 0x80, 0x00, // 6    96C
    0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0xde, 0x8e, 0x86, 0xce, 0xfc, 0xf0, 0x00, 0x00,
    0x00, 0x00, 0x01, 0x0f, 0x1c, 0x38, 0x70, 0x70, 0xe0, 0xe0, 0xf1, 0x71, 0x79, 0x3d, 0x1f, 0x00, 0x00, // 7    96D
    0x00, 0x10, 0x98, 0xd8, 0x78, 0x38, 0x38, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x08, 0x00,
    0x00, 0x07, 0x0f, 0x1c, 0x18, 0x18, 0x1c, 0x1c, 0x1e, 0x0e, 0x0e, 0x5c, 0x78, 0x00, 0x00, 0x00, // 8    96E
    0x00, 0x3c, 0x6e, 0xe7, 0x63, 0x73, 0x3c, 0x1c, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x01, 0x03, 0x06, 0x8c, 0x98, 0xf0, 0x60, 0x00 // 9    96F
};

#endif